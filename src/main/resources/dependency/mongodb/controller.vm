#set( $pkg = "com.tzg.web.project.mongodb" )
#set( $pkg = $pkg.replaceAll( "project", $project.toLowerCase() ) )
package $pkg;

import com.tzg.service.support.json.JsonResp;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.data.mongodb.core.query.Update;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import java.util.List;

@Controller( "mongodbFooController" )
@RequestMapping( "/mongodb" )
public class FooController {

	@Resource
	private MongoDBService< Foo > mongoDBService;

	@RequestMapping( "/post" )
	@ResponseBody
	public JsonResp post( Foo foo ) throws Exception {
		mongoDBService.insert( foo, "foos" );
		return new JsonResp();
	}

	@RequestMapping( "/delete" )
	@ResponseBody
	public JsonResp delete( Foo foo ) throws Exception {
		mongoDBService.delete(
			new Query( Criteria.where( "id" ).is( foo.getId() ) ),
			foo,
			"foos"
		);
		return new JsonResp();
	}

	@RequestMapping( "/put" )
	@ResponseBody
	public JsonResp put( Foo foo ) throws Exception {
		mongoDBService.update(
			new Query( Criteria.where( "id" ).is( foo.getId() ) ),
			new Update().set( "username", foo.getUsername() ),
			foo,
			"foos"
		);
		return new JsonResp();
	}

	@RequestMapping( "/get" )
	@ResponseBody
	public JsonResp get( Foo foo ) throws Exception {
		Foo u = mongoDBService.selectOne(
			new Query( Criteria.where( "id" ).is( foo.getId() ) ),
			foo,
			"users"
		);
		return new JsonResp( JsonResp.OK, u );
	}

	@RequestMapping( "/index" )
	@ResponseBody
	public JsonResp index( Foo foo ) throws Exception {
		List< Foo > result = mongoDBService.selectList(
			new Query( Criteria.where( "age" ).is( foo.getAge() ) ),
			foo,
			"users"
		);
		return new JsonResp( JsonResp.OK, result );
	}

}
